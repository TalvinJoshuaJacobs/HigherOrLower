// Higher or Lower is guessing game coded in C++
// Set inside the command line, the player is presented with a random number between 1 and 10.
// This number, as well as a second hidden random number with the same properties is generated by the computer.
// The player has to guess whether the hidden random number is higher or lower than the number presented to them.
// If they guess correctly, they win, and if not, they lose.
// The user also prompted with a question asking them if they would like to play again.
// By Talvin Jacobs (2018)

// Includes
#include <cstdlib>	// C Standard Library 
#include <iostream>	// Input Output Stream
#include <ctime>	// C Time (used for the random number generation)
using namespace std;

// A conditional function responsible for the feedback of the user's input when prompted to chose Higher of Lower
void hlDecider(string ch) {

  if (ch == "h") {
    cout << "You have chosen Higher!" << endl << endl;
  }
  else if (ch == "l") {
    cout << "You have chosen Lower!" << endl << endl;
  }
 
}

// Another conditional function
// Responsible for the feedback of the user's input when prompted to chose whether to play again or not
void paDecider(string ch) {

  if (ch == "y") {
    cout << "Let's go again!" << endl << endl;
  }
  else if (ch == "n") {
    cout << "Thank you for playing!" << endl << endl;
  }

}

// Where the program begins
int main() { 

  rematch:	// "goto rematch;" sends the program here for the player to play again
  
  // Generation of the first number (Displayed)
  srand(time(NULL));	// Uses time to generate the "random" number
  cout << "This is the first number: ";
  int randomNumber1(rand() % 10 + 1);	// The random number has range 10 and shifted up 1 so the number is between 1 and 10 inclusive
  cout << randomNumber1 << endl;	// It is displayed

  // Generation of the second number (Hidden)
  srand(time_t(rand() % 7 + 7));	// Also uses time, but a separate unrelated random number is used to generate the second random number
									// This stops the two generated random numbers being the same
  int randomNumber2(rand() % 10 + 1);	// The random number has range 10 and shifted up 1 so the number is between 1 and 10 inclusive
  //cout << randomNumber2 << endl; // Remove the first "//" of this line to have the second random number displayed

  retry:	// "goto retry;" sends the program here if the player has not entered his/her higher/lower choice correctly
  
  cout << "Would you like to go higher or lower? Type 'h' for higher, or 'l' for lower: ";

  // Receiving the player's input on whether they think higher or lower and taking action based on this input 
  string userChoice;	// The player's higher/lower choice is a string 
  cin >> userChoice;	// The player's input is taken in
  clock; hlDecider(userChoice);	// The program goes to the conditional function hlDecider with this received information and carries it out

  // When the player has NOT inputted either h or l, he/she is asked to type in their choice again
  while (userChoice != "h" && userChoice != "l") {
    cout << "Please type that in again..." << endl << endl;
    goto retry;	// Sends the program to "retry:"
    break;	// Stops the while loop from flooding the command line and crashing it
  }

// If the two computer generated random numbers are the same...
  if (randomNumber1 == randomNumber2) {
    cout << "Draw!" << endl << endl;	// The game ends in a draw
  }

// If the displayed random number is higher than the hidden random number and the player choses "l" for lower...
  if ((randomNumber1 > randomNumber2) && (userChoice == "l")) {
    cout << "You win!" << endl << endl;	// The player wins
  }
 // If the displayed random number is higher than the hidden random number and the player choses "h" for higher...
  else if ((randomNumber1 > randomNumber2) && (userChoice == "h")) {
    cout << "You lose!" << endl << endl;	// The player loses
  }
 // If the displayed random number is smaller than the hidden random number and the player choses "h" for higher...
  else if ((randomNumber1 < randomNumber2) && (userChoice == "h")) {
    cout << "You win!" << endl << endl;	// The player wins
  }
 // If the displayed random number is smaller than the hidden random number and the player choses "l" for lower...
  else if ((randomNumber1 < randomNumber2) && (userChoice == "l")) {
    cout << "You lose!" << endl << endl;	// The player loses
  }

  retryAgain:	// "goto retryAgain;" sends the program here if the player has typed in their choice to play again or not incorrectly

  cout << "Would you like to play again? Type 'y' for yes, or 'n' for no: ";
  
  // Receiving the player's input on whether they want to play again or not and taking action based on this input
  string playAgain;	// They player's decision to play again or not is a string
  cin >> playAgain;	// The player's input is taken in
  clock; paDecider(playAgain);	// The program goes to the conditional function paDecider with this recieved information and carries it out
  
  // When the player types "y" for yes...
  while (playAgain == "y") {
    goto rematch;	// The program will be sent to "rematch:" so the player can play again
    break;	// Stops the while loop from flooding the command line and crashing it
  }

  // When the player does not type in "y" for yes or "n" or no...
  while (playAgain != "y" && playAgain != "n") {
    cout << "Please type that in again..." << endl << endl;	// The player is prompted to type in the choice again correctly
    goto retryAgain;	// The program is sent to "retryAgain:" for the player to retype their decision
    break;	// Stops the loop from again, flooding the command line and crashing it
  }
  
}
